<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Emotion Tracker: Edit Snapshot</title>
    <!-- UIkit CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/css/uikit.min.css"/>
    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <!-- Semantic UI -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css"/>
    <style>
      .label-with-spacing {
          margin-right: 30px;
      }
    </style>

    <!-- UIkit JS -->
    <script src="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/js/uikit.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/js/uikit-icons.min.js"></script>
    <!-- Semantic UI -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js"></script>
    <!-- Chart JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.js"></script>
    <!-- Triggers dropdown -->
    <script>
      $(document).ready(function () {
        function initializeDropdown(initialTriggers, allTriggers) {
          var initialValues = initialTriggers.split(",").map(function (trigger) {
            return trigger.trim();
          });

          var allValues = allTriggers.split(",").map(function (trigger) {
            return trigger.trim();
          });

          var dropdownMenu = document.getElementById("trigger-details");
          var menuOptions = dropdownMenu.querySelector(".menu");
          menuOptions.innerHTML = ""; // Clear existing options

          // Add options from allValues, excluding initialValues
          allValues.forEach(function (trigger) {
            if (!initialValues.includes(trigger)) {
              var option = document.createElement("div");
              option.className = "item";
              option.setAttribute("data-value", trigger);
              option.innerText = trigger;
              menuOptions.appendChild(option);
            }
          });

          // Set initial selected values in the dropdown
          $('.ui.dropdown').dropdown('set selected', initialValues);
        }

        // Extract trigger values from the API response and initialize dropdown
        initializeDropdown("<%= details[0].triggers %>", "<%= details[0].all_triggers %>");

        console.log("Dropdown initialization script executed");
      });
    </script>
  </head>

  <body>
    <div class="uk-section">
      <div class="uk-container">
        <nav class="uk-navbar-container uk-navbar-transparent" uk-navbar="" style="width:100%">
          <div class="uk-navbar-left">
            <img src="/imgs/brain_icon.png" />

            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/">Snapshots</a></li>
              <li class="uk-active"><a href="/new">Add</a></li>
              <li class="uk-active"><a href="/useradmin/accountadmin">Account Admin</a></li>
            </ul>
          </div>
          <div class="uk-navbar-right">
            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/logout">Logout</a></li>
            </ul>
          </div>
        </nav>
      </div>
      <h1 class="uk-heading-small uk-heading-line uk-text-center"><span>Edit Snapshot</span></h1>
    </div>

    <div class="uk-section uk-background-muted uk-text-bold uk-text-primary">
      <% for (let row of details) { %>
      <% var snapshotid = row.id; %>
      <% var snapshotuser = row.UPDATED_BY; %>
      <% var snapshotinfo = row.items; %>
      <% var snapshotdate = row.INSERT_DATE; %>
      <% var inputdate = new Date(snapshotdate).toISOString().slice(0,16); %>
      <% console.log("inputdate: ", inputdate); %>
      <% } %>
      <div class="uk-container">
          <div class="uk-container-large uk-column-1-2">
            <p>
              <canvas id="chartId" aria-label="chart" height="350" width="580"></canvas>
            </p>
            <p>
              <style>
                .uk-container {
                  display: flex;
                  align-items: center;
                }

                .uk-container label {
                  width: 100px;
                  display: inline-block;
                }

                .uk-container button,
                .uk-container input,
                .uk-container span {
                  margin-right: 10px;
                }

              .label-input-container {
                display: flex;
                align-items: center;
              }

              .label-with-spacing {
                margin-right: 30px;
              }

              .label-with-spacing label {
                width: 150px;
                display: inline-block;
              }
              </style>

              <div id="emotions-container">
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('anger')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="anger" min="0" max="10" step="1" value="<%= details[0].level_anger %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('anger')">+</button>
                  <label for="anger">Anger:</label>
                  <span class="uk-label" id="emo-anger"><%= details[0].level_anger %></span>
                </div>
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('contempt')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="contempt" min="0" max="10" step="1" value="<%= details[0].level_contempt %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('contempt')">+</button>
                  <label for="contempt">Contempt:</label>
                  <span class="uk-label" id="emo-contempt"><%= details[0].level_contempt %></span>
                </div>
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('disgust')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="disgust" min="0" max="10" step="1" value="<%= details[0].level_disgust %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('disgust')">+</button>
                  <label for="disgust">Disgust:</label>
                  <span class="uk-label" id="emo-disgust"><%= details[0].level_disgust %></span>
                </div>
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('enjoyment')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="enjoyment" min="0" max="10" step="1" value="<%= details[0].level_enjoyment %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('enjoyment')">+</button>
                  <label for="enjoyment">Enjoyment:</label>
                  <span class="uk-label" id="emo-enjoyment"><%= details[0].level_enjoyment %></span>
                </div>
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('fear')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="fear" min="0" max="10" step="1" value="<%= details[0].level_fear %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('fear')">+</button>
                  <label for="fear">Fear:</label>
                  <span class="uk-label" id="emo-fear"><%= details[0].level_fear %></span>
                </div>
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('sadness')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="sadness" min="0" max="10" step="1" value="<%= details[0].level_sadness %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('sadness')">+</button>
                  <label for="sadness">Sadness:</label>
                  <span class="uk-label" id="emo-sadness"><%= details[0].level_sadness %></span>
                </div>
                <div class="uk-container">
                  <button class="uk-button uk-button-default" onclick="decreaseValue('surprise')">-</button>
                  <input class="uk-range uk-form-width-medium" type="range" id="surprise" min="0" max="10" step="1" value="<%= details[0].level_surprise %>"/>
                  <button class="uk-button uk-button-default" onclick="increaseValue('surprise')">+</button>
                  <label for="surprise">Surprise:</label>
                  <span class="uk-label" id="emo-surprise"><%= details[0].level_surprise %></span>
                </div>
              </div>
              <div class="uk-container uk-margin-top">
                <div class="label-input-container">
                  <div class="label-with-spacing">
                    <label for="trigger-details">Trigger Details:</label>
                  </div>
                  <div class="ui multiple selection search dropdown" id="trigger-details" style="width: 295px;">
                    <input type="hidden" name="tags" />
                    <i class="dropdown icon"></i>
                    <div class="default text">Select triggers or enter new value</div>
                    <div class="menu">
                    </div>
                  </div>
                </div>
              </div>
              <div class="uk-container" id="date-container">
                <div class="label-input-container">
                  <div class="label-with-spacing">
                    <label for="snapshot_date">Date:</label>
                  </div>
                  <div>
                    <input class="uk-input" name="snapshot_date" type="datetime-local" style="width: 330px;" value="<%= inputdate %>" required/>
                  </div>
                </div>
              </div>
              <div class="uk-container">
                <div class="label-input-container">
                  <div class="label-with-spacing">
                    <label for="snapshot_date">Notes:</label>
                  </div>
                  <div>
                    <input class="uk-input" name="snapshot_notes" type="text" style="width: 330px;" value="<%= details[0].notes %>"/>
                  </div>
                </div>
              </div>
              <div class="uk-container uk-margin-top">
                <div uk-form-custom>
                  <button id="updateButton" class="uk-button uk-button-primary uk-button-large uk-margin-right" formaction="/edit/<%= snapshotid %>">Update</button>
                  <button id="deleteButton" class="uk-button uk-button-danger uk-button-large" formaction="/del/<%= snapshotid %>">Delete</button>
                </div>
              </div>
            </div>
          </p>
        </div>
      </div>
    </div>
    
    <!------------------->
    <!-- Range Sliders -->
    <!------------------->
    <script>
      function increaseValue(emotion) {
        var slider = document.getElementById(emotion);
        var output = document.getElementById("emo-" + emotion);

        if (slider.value < 10) {
          slider.value = parseInt(slider.value) + 1;
          output.innerHTML = slider.value;
          updateChart();
        }
      }

      function decreaseValue(emotion) {
        var slider = document.getElementById(emotion);
        var output = document.getElementById("emo-" + emotion);

        if (slider.value > 0) {
          slider.value = parseInt(slider.value) - 1;
          output.innerHTML = slider.value;
          updateChart();
        }
      }

      // Add event listeners for range sliders
      var sliders = document.querySelectorAll(".uk-range");
      sliders.forEach(function (slider) {
        slider.addEventListener("input", function () {
          var emotion = this.id;
          var output = document.getElementById("emo-" + emotion);
          output.innerHTML = this.value;
          updateChart();
        });
      });
    
      // Add event listeners for buttons
      var buttons = document.querySelectorAll(".uk-button-default");
      buttons.forEach(function (button) {
        button.addEventListener("mousedown", function () {
          var emotion = this.getAttribute("data-emotion");
          var slider = document.getElementById(emotion);
          var output = document.getElementById("emo-" + emotion);
    
          if (this.textContent === "+") {
            if (slider.value < 10) {
              slider.value = parseInt(slider.value) + 1;
              output.innerHTML = slider.value;
              updateChart();
            }
          } else if (this.textContent === "-") {
            if (slider.value > 0) {
              slider.value = parseInt(slider.value) - 1;
              output.innerHTML = slider.value;
              updateChart();
            }
          }
        });
      });
    
      function updateChart() { // Update chart data based on the current slider values
        var chartData = [];
        sliders.forEach(function (slider) {
          chartData.push(parseInt(slider.value));
        });
    
        chartId.data.datasets[0].data = chartData;
        chartId.update();
      }
    </script>
    <!----------------->
    <!-- Radar Chart -->
    <!----------------->
    <script>
      var chrt = document.getElementById("chartId").getContext("2d");

      var initialData = [];
      sliders.forEach(function (slider) {
        initialData.push(parseInt(slider.value));
      });
    
      var chartId = new Chart(chrt, {
        type: "radar",
        data: {
          labels: [
            "Anger",
            "Contempt",
            "Disgust",
            "Enjoyment",
            "Fear",
            "Sadness",
            "Surprise",
          ],
          datasets: [
            {
              label: "Emotion Snapshot",
              data: initialData, // Set initial data dynamically
              backgroundColor: ["#FFF17625"],
              pointBackgroundColor: [
                "yellow",
                "aqua",
                "pink",
                "lightgreen",
                "lightblue",
                "gold",
                "purple",
              ],
              borderColor: ["black"],
              borderWidth: 1,
              pointRadius: 6,
            },
          ],
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: false,
            },
          },
          scale: {
        ticks: {
          beginAtZero: true,
        },
        min: 0,
        max: 10,
      },
          elements: {
            line: {
              borderWidth: 3,
            },
          },
        },
      });
    </script>
    <!-------------------------------------->
    <!-- Dropdown Menu dynamic adjustment -->
    <!-------------------------------------->
    <script>
      $('.ui.dropdown').dropdown({ // Initialize Semantic UI dropdown
        allowAdditions: true,
        maxSelections: 10,
        onChange: function(value, text, $selectedItem) {
          console.log("Dropdown value changed");
          updateSelectedValues();
        },
        onAdd: function(addedValue, addedText, $addedChoice) {
          console.log("Item added");
          updateSelectedValues();
        },
        onRemove: function(removedValue, removedText, $removedChoice) {
          console.log("Item removed");
          updateSelectedValues();
        },
      });
    
      function updateSelectedValues() {
        var selectedValues = $('.ui.dropdown').dropdown('get value');
        console.log("Selected Values:", selectedValues);
      }

      console.log("Dropdown adjustment script executed");
    </script>
    <!--------------------->
    <!-- Update Snapshot -->
    <!-- prettier-ignore -->
    <script>
      function handleUpdateButtonClick() {
        console.log("Executing handleUpdateButtonClick()");

        var initialInputValues =
        "<%= details[0].level_anger %>" + '|' +
        "<%= details[0].level_contempt %>" + '|' +
        "<%= details[0].level_disgust %>" + '|' +
        "<%= details[0].level_enjoyment %>" + '|' +
        "<%= details[0].level_fear %>" + '|' +
        "<%= details[0].level_sadness %>" + '|' +
        "<%= details[0].level_surprise %>" + '|' +
        "<%= inputdate %>" + '|' +
        "<%= details[0].notes.trim() %>" + '|' +
        "<%= details[0].triggers.replace(', ', ',') %>";

        function getCurrentValues() {
          var currentInputValues =
          parseInt(document.getElementById('anger').value) + '|' +
          parseInt(document.getElementById('contempt').value) + '|' +
          parseInt(document.getElementById('disgust').value) + '|' +
          parseInt(document.getElementById('enjoyment').value) + '|' +
          parseInt(document.getElementById('fear').value) + '|' +
          parseInt(document.getElementById('sadness').value) + '|' +
          parseInt(document.getElementById('surprise').value) + '|' +
          document.getElementsByName('snapshot_date')[0].value + '|' +
          document.getElementsByName('snapshot_notes')[0].value.trim() + '|' +
          $('.ui.dropdown').dropdown('get value');

          return currentInputValues;
        }

        var currentInputValues = getCurrentValues();
        console.log("Initial Input Values:", initialInputValues);
        console.log("Current Input Values:", currentInputValues);

        if (initialInputValues === currentInputValues) {
          UIkit.modal.alert("No changes have been made to this snapshot. There is nothing to update.");
          return; // Stop further processing
        }

        UIkit.modal.confirm(`Update snapshot?`).then(function () {
          performUpdate(); // User clicked "Ok": proceed with the API call
        }, function () { // User clicked "Cancel": do nothing
        });
      }
    
      function performUpdate() {
        var snapshotid = '<%= snapshotid %>';
        var snapshotuser = '<%= snapshotuser %>';
        var anger = document.getElementById('anger').value;
        var contempt = document.getElementById('contempt').value;
        var disgust = document.getElementById('disgust').value;
        var enjoyment = document.getElementById('enjoyment').value;
        var fear = document.getElementById('fear').value;
        var sadness = document.getElementById('sadness').value;
        var surprise = document.getElementById('surprise').value;
        var triggerDetails = $('.ui.dropdown').dropdown('get value');
        var snapshotDate = document.getElementsByName('snapshot_date')[0].value;
        var snapshotNotes = document.getElementsByName('snapshot_notes')[0].value;
    
        var postData = {
          inp_ehid: snapshotid,
          inp_anger: anger,
          inp_contempt: contempt,
          inp_disgust: disgust,
          inp_enjoyment: enjoyment,
          inp_fear: fear,
          inp_sadness: sadness,
          inp_surprise: surprise,
          inp_notes: snapshotNotes,
          inp_triggerlist: triggerDetails,
          inp_snapshotdate: snapshotDate,
          inp_user: snapshotuser,
        };
        console.log("postData:",postData);
    
        $.post('/edit/' + snapshotid, postData, function (data) {
          console.log(data);
        });
      }
    
      document.getElementById('updateButton').addEventListener('click', handleUpdateButtonClick);
    </script>
    <!---------------------------------------------------->
    <!-- Enable/Disable changes to date & range sliders -->
    <!-- prettier-ignore --------------------------------->
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        var role = '<%= role %>';
    
        function toggleElements() { // Disable range sliders & buttons for non-admin
          var emotionElements = document.querySelectorAll('#emotions-container input, #emotions-container button');
          emotionElements.forEach(function (element) {
            element.disabled = role !== 'administrator';
          });
    
          var dateInput = document.querySelector('#date-container input'); // Disable snapshot_date input for non-admin
          dateInput.disabled = role !== 'administrator';
        }
    
        toggleElements();
      });
    </script>
    <!--------------------->
    <!-- Delete Snapshot -->
    <!-- prettier-ignore -->
    <script>
      $(document).ready(function() {
        $('#deleteButton').on('click', function(e) {
          e.preventDefault();
    
          UIkit.modal.confirm('Delete snapshot?').then(function() {
            var snapshotid = '<%= snapshotid %>';
    
            var postData = {
              inp_ehid: snapshotid,
            };
    
            $.ajax({
              url: '/del/' + snapshotid,
              type: 'POST',
              data: postData,
              success: function(response) {
                if (response.status === 'success') {
                  alert('Snapshot deleted successfully');
                  window.location.href = '/';
                } else {
                  alert('Error: ' + response.message);
                }
              },
              error: function(jqXHR, textStatus, errorThrown) {
                alert('Error: ' + textStatus + ' ' + errorThrown);
              }
            });
          }, function() {
          });
        });
      });
    </script>
  </body>
</html>