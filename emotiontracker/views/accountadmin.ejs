<!DOCTYPE html>
<html lang="en">
  <!-- prettier-ignore -->
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Emotion Tracker: Account Admin</title>
    <!-- UIkit CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/css/uikit.min.css"/>
    <!-- UIkit JS -->
    <script src="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/js/uikit.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/js/uikit-icons.min.js"></script>
    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <!-- Alert message from URL -->
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        const urlParams = new URLSearchParams(window.location.search);
        const status = urlParams.get('status');
        const message = urlParams.get('message');
    
        if (status && message) {
          UIkit.modal.alert(`Status: ${status}\nMessage: ${message}`);
        }
      });
    </script>
  </head>

  <body>
    <div class="uk-section">
      <div class="uk-container">
        <!-- prettier-ignore -->
        <nav class="uk-navbar-container uk-navbar-transparent" uk-navbar="" style="width: 100%">
          <div class="uk-navbar-left">
            <img src="/imgs/brain_icon.png" />

            <ul class="uk-navbar-nav">
              <% if (loggedin) { %>
              <li class="uk-active"><a href="/">Snapshots</a></li>
              <li class="uk-parent"><a href="#" onclick="navigateToAddPage()">Add</a></li>
              <% } %>
          </ul>
          </div>
          <% if (!loggedin) { %>
          <div class="uk-navbar-center">
            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/createaccount">Create Account</a></li>
            </ul>
          </div>
          <div class="uk-navbar-right">
            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/login">Login</a></li>
            </ul>
          </div>
          <% } else { %>
          <div class="uk-navbar-right">
            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/logout">Logout</a></li>
            </ul>
          </div>
          <% } %>
        </nav>
      </div>
    </div>

    <div class="uk-section uk-background-muted">
      <!-- prettier-ignore -->
      <div class="uk-container">
        <h2 class="uk-heading-small uk-heading-line uk-text-center">
          <span>Account Admin</span>
        </h2>
        <% if (loggedin) { %>
          <div class="uk-button uk-form-select" data-uk-form-select>
            <span>User:</span>
            <select id="userDropdown">
              <% for (let row of details) { %>
                  <option value="<%= row.id %>"><%= row.name %></option>
              <% } %>
            </select>
          </div>
        <% } %>
        <div class="uk-section uk-background-muted">
          <div class="uk-container">
            <h2 class="uk-text-large uk-heading-line uk-text-center">
              <span>Manage Account Details</span>
            </h2>
            <form id="updateForm" class="uk-grid-small" uk-grid>
              <div class="uk-width-1-2@s">
                <input class="uk-input" name="username" type="text" placeholder="Username"
                  uk-tooltip="title: Username (min. 3/max. 250 characters): if left blank, email address will be used as login ID"
                  required/>
              </div>
              <div class="uk-width-1-2@s">
                <input class="uk-input" name="email" type="text" placeholder="Email Address"
                  uk-tooltip="title: Email address (min. 3/max. 250 characters)"
                  required/>
              </div>
              <div class="uk-width-1-2@s">
                <input class="uk-input" name="firstname" type="text" placeholder="First Name"
                  uk-tooltip="title: First name (optional - max. 100 characters)"
                  required/>
              </div>
              <div class="uk-width-1-2@s">
                <input class="uk-input" name="lastname" type="text" placeholder="Last Name"
                  uk-tooltip="title: Last name (optional - max. 100 characters)"
                  required/>
              </div>
              <div class="uk-width-1-2@s">
                <input class="uk-input" id="userpass" name="userpass" type="password" placeholder="Password"
                       uk-tooltip="title: Password (min. 3/max. 50 characters)"
                       required/>
                <input type="checkbox" id="togglePassword"> Show Password
              </div>
              <% if (role == 'administrator') { %>
                <div class="uk-width-1-2@s">
                  <select class="uk-select" name="userrole" required>
                    <option value="user">User</option>
                    <option value="administrator">Administrator</option>
                  </select>
              </div>
              <% } %>
              <div class="uk-width-1-2@s uk-margin-top">
                <button class="uk-button uk-button-primary update-account-button uk-margin-right" disabled>Update Account</button>
                <% if (role == 'administrator') { %>
                <button class="uk-button uk-button-danger delete-account-button" type="button" disabled>Delete Account</button>
                <% } %>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- prettier-ignore -->
    <script>
      function navigateToAddPage() {
        <% if (typeof user !== 'undefined' && user && user.name) { %>
          // Set the user.name in localStorage
          localStorage.setItem("username", "<%= user.name %>");

          // Navigate to the "/new" page
          window.location.href = "/new";
        <% } else { %>
          console.log("User is undefined or does not have a name."); // or handle it as needed
        <% } %>
      }
    </script>
    <!-- prettier-ignore -->
    <script>
      // Get the password field and the checkbox
      var passwordField = document.getElementById("userpass");
      var togglePasswordCheckbox = document.getElementById("togglePassword");

      togglePasswordCheckbox.addEventListener("click", function () {
        if (passwordField.type === "password") {
          passwordField.type = "text";
        } else {
          passwordField.type = "password";
        }
      });
    </script>
    <!-- prettier-ignore -->
    <script>
      // Function to handle the form submission
      function handleFormSubmit(event) {
        event.preventDefault();
    
        UIkit.modal.confirm('Proceed with update?').then(function () {
          var selectedUserId = document.getElementById("userDropdown").value;
    
          var userroleElement = document.getElementsByName("userrole")[0];
          var userrole = userroleElement ? userroleElement.value : 'user';
    
          var formData = {
            username: document.getElementsByName("username")[0].value,
            email: document.getElementsByName("email")[0].value,
            firstname: document.getElementsByName("firstname")[0].value,
            lastname: document.getElementsByName("lastname")[0].value,
            userpass: document.getElementsByName("userpass")[0].value,
            userrole: userrole,
          };
    
          var postData = {
            inp_id: selectedUserId,
            inp_name: formData.username,
            inp_firstname: formData.firstname,
            inp_lastname: formData.lastname,
            inp_email: formData.email,
            inp_password: formData.userpass,
            inp_role: formData.userrole,
          };
    
          // Make the PUT request
          $.ajax({
            url: "/useradmin/users/" + selectedUserId,
            type: "PUT",
            data: postData,
            beforeSend: function(jqXHR, settings) {
              console.log('About to send request:', settings);
            },
            success: function (data) {
              console.log(data);
              window.location.href = data.redirectURL;
            },
            error: function (error) {
              console.log("Error:", error);
            },
            complete: function(jqXHR, textStatus) {
              console.log('AJAX request completed with status:', textStatus);
            }
          });
        }, function () {
          // User rejected the confirmation, do nothing
        });
      }
    
      // Attach the submit event handler to the form
      document.getElementById("updateForm").addEventListener("submit", handleFormSubmit);
    </script>
    <!-- Disable the Update Account button if no inputs have changed -->
    <!-- prettier-ignore -->
    <script>
      // Get all input fields and the 'Update Account' button
      var inputFields = document.querySelectorAll('#updateForm input, #updateForm select');
      var updateButton = document.querySelector('.update-account-button');

      // Function to create a delimited list of input values
      function createInputList() {
        var inputValues = [];
        for (var i = 0; i < inputFields.length; i++) {
          inputValues.push(inputFields[i].value);
        }
        return inputValues.join('|');
      }
    </script>
    <!-- Use the createInputList function and the inputFields variable -->
    <!-- prettier-ignore -->
    <script>
      // Create List 1 when the page is first loaded and when the user selection changes
      var list1 = createInputList();
      document
        .getElementById("userDropdown")
        .addEventListener("change", function () {
          list1 = createInputList();
        });

      // Create List 2 and compare it with List 1 whenever an input value changes
      inputFields.forEach(function (inputField) {
        inputField.addEventListener("input", function () {
          var list2 = createInputList();
          updateButton.disabled = list1 === list2;
        });
      });
    </script>
    <!-- prettier-ignore -->
    <script>
      // Create a JavaScript variable and assign the details array to it
      var details = <%- JSON.stringify(details) %>;
    
      // Create an object to store the initial values of the input fields
      var initialInputValues = {};
    
      // Function to update the input fields based on the selected user ID
      function updateUserInputs(selectedUserId) {
        return new Promise(function(resolve) {
          // Find the corresponding user details based on the selected ID
          var selectedUser = details.find(function(user) {
            return user.id == selectedUserId;
          });
    
          // Update other input fields with the selected user details
          var usernameField = document.getElementsByName('username')[0];
          usernameField.value = selectedUser.name;
          initialInputValues['username'] = selectedUser.name;
    
          var emailField = document.getElementsByName('email')[0];
          emailField.value = selectedUser.email;
          initialInputValues['email'] = selectedUser.email;
    
          var firstnameField = document.getElementsByName('firstname')[0];
          firstnameField.value = selectedUser.firstname;
          initialInputValues['firstname'] = selectedUser.firstname;
    
          var lastnameField = document.getElementsByName('lastname')[0];
          lastnameField.value = selectedUser.lastname;
          initialInputValues['lastname'] = selectedUser.lastname;
    
          var passwordField = document.getElementsByName('userpass')[0];
          passwordField.value = selectedUser.password;
          initialInputValues['userpass'] = selectedUser.password;
    
          <% if (role == 'administrator') { %>
            var roleField = document.getElementsByName('userrole')[0];
            roleField.value = selectedUser.role;
            initialInputValues['userrole'] = selectedUser.role;
          <% } %>
    
          // Resolve the promise after the input fields have been updated
          resolve();
        });
      }
    
      // Function to check if any input field has a different value
      function checkInputFields() {
        for (var i = 0; i < inputFields.length; i++) {
          var inputName = inputFields[i].name;
          if (inputFields[i].value !== initialInputValues[inputName]) {
            // If any input field has a different value, enable the button and return
            updateButton.disabled = false;
            return;
          }
        }
        // If none of the input fields have a different value, disable the button
        updateButton.disabled = true;
      }
    
      // JavaScript to handle the change event of the dropdown
      document.getElementById('userDropdown').addEventListener('change', function() {
        // Get the selected option value
        var selectedUserId = this.value;
    
        // Update the input fields
        updateUserInputs(selectedUserId).then(checkInputFields);
      });
    
      // Call the function to update the input fields when the page loads
      updateUserInputs(document.getElementById('userDropdown').value).then(checkInputFields);
    
      // Create List 1 when the page is first loaded and when the user selection changes
      var list1 = createInputList();
      document.getElementById('userDropdown').addEventListener('change', function() {
        list1 = createInputList();
      });
    
      // Call the function to check the input fields after creating the initial list
      checkInputFields();
    </script>
    <!-------------------------------------->
    <!-- Enable/Disabled 'Delete Account' -->
    <!-- prettier-ignore ------------------->
    <script>
      var userDropdown = document.getElementById("userDropdown");
      var deleteButton = document.querySelector(".delete-account-button");

      userDropdown.addEventListener("change", function () {
        var selectedUserName = this.selectedOptions[0].text;

        deleteButton.disabled = !(
          selectedUserName !== "admin" && selectedUserName !== "user"
        );
      });

      userDropdown.dispatchEvent(new Event("change"));
    </script>
    <!------------------------->
    <!-- Delete User Account -->
    <!-- prettier-ignore ------>
    <script>
      var deleteButton = document.querySelector(".delete-account-button");

      deleteButton.addEventListener("click", function () {
        UIkit.modal.confirm("Continue with account deletion?").then(
          function () {
            var selectedUserName =
              document.getElementById("userDropdown").selectedOptions[0].text;

            $.ajax({
              url: "/useradmin/users/" + selectedUserName,
              type: "POST",
              success: function (response) {
                console.log("response.status:", response.status);
                console.log("response:", response);
                if (response.status === "success") {
                  UIkit.modal.alert(response.message).then(function () {
                    location.reload();
                  });
                } else {
                  UIkit.modal.alert("Error: " + response.message);
                }
              },
              error: function (jqXHR, textStatus, errorThrown) {
                UIkit.modal.alert("Error: " + textStatus + " " + errorThrown);
              },
            });
          },
          function () {
            // User clicked 'Cancel', do nothing
          }
        );
      });
    </script>
  </body>
</html>
