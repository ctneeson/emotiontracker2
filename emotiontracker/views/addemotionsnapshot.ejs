<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Emotion Tracker: Add New Snapshot</title>
    <!-- UIkit CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/css/uikit.min.css"/>
    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <!-- Semantic UI -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css"/>
    <style>
      .label-with-spacing {
          margin-right: 30px;
      }
    </style>

    <!-- UIkit JS -->
    <script src="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/js/uikit.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/uikit@3.17.11/dist/js/uikit-icons.min.js"></script>
    <!-- Semantic UI -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js"></script>
    <!-- Chart JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.js"></script>

    <!-- Get user.name -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Get the username from localStorage
        const username = localStorage.getItem("username");
        // Check if username exists in localStorage
        if (username) {
          // Now you can use the username as needed in your page
          console.log("Username:", username);
          // Make the username globally accessible by assigning it to the window object
          window.username = username;
        } else {
          // Handle the case where the username is not found
          console.error("Username not found in localStorage");
        }
      });
    </script>
  </head>

  <body>
    <div class="uk-section">
      <div class="uk-container">
        <nav class="uk-navbar-container uk-navbar-transparent" uk-navbar="" style="width:100%">
          <div class="uk-navbar-left">
            <img src="/imgs/brain_icon.png" />

            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/">Snapshots</a></li>
            </ul>
          </div>
          <div class="uk-navbar-right">
            <ul class="uk-navbar-nav">
              <li class="uk-active"><a href="/logout">Logout</a></li>
            </ul>
          </div>
        </nav>
      </div>
      <h1 class="uk-heading-small uk-heading-line uk-text-center"><span>Add New Snapshot</span></h1>
    </div>

    <div class="uk-section uk-background-muted uk-text-bold uk-text-primary">
      <div class="uk-container">
        <div class="uk-container-large uk-column-1-2">
          <p>
            <canvas id="chartId" aria-label="chart" height="350" width="580"></canvas>
          </p>
          <p>
            <style>
              .uk-container {
                  display: flex;
                  align-items: center;
              }
          
              .uk-container label {
                  width: 100px;
                  display: inline-block;
              }
          
              .uk-container button,
              .uk-container input,
              .uk-container span {
                  margin-right: 10px;
              }

              .label-input-container {
                display: flex;
                align-items: center;
              }

              .label-with-spacing {
                margin-right: 30px;
              }

              .label-with-spacing label {
                width: 150px;
                display: inline-block;
              }
            </style>

            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('anger')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="anger" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('anger')">+</button>
              <label for="anger">Anger:</label>
              <span class="uk-label" id="emo-anger">5</span>
            </div>
            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('contempt')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="contempt" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('contempt')">+</button>
              <label for="contempt">Contempt:</label>
              <span class="uk-label" id="emo-contempt">5</span>
            </div>
            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('disgust')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="disgust" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('disgust')">+</button>
              <label for="disgust">Disgust:</label>
              <span class="uk-label" id="emo-disgust">5</span>
            </div>
            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('enjoyment')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="enjoyment" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('enjoyment')">+</button>
              <label for="enjoyment">Enjoyment:</label>
              <span class="uk-label" id="emo-enjoyment">5</span>
            </div>
            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('fear')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="fear" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('fear')">+</button>
              <label for="fear">Fear:</label>
              <span class="uk-label" id="emo-fear">5</span>
            </div>
            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('sadness')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="sadness" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('sadness')">+</button>
              <label for="sadness">Sadness:</label>
              <span class="uk-label" id="emo-sadness">5</span>
            </div>
            <div class="uk-container">
              <button class="uk-button uk-button-default" onclick="decreaseValue('surprise')">-</button>
              <input class="uk-range uk-form-width-medium" type="range" id="surprise" min="0" max="10" step="1" value="5"/>
              <button class="uk-button uk-button-default" onclick="increaseValue('surprise')">+</button>
              <label for="surprise">Surprise:</label>
              <span class="uk-label" id="emo-surprise">5</span>
            </div>
            <div class="uk-container">
              <div class="label-input-container">
                <div class="label-with-spacing">
                  <label for="trigger-details">Trigger Details:</label>
                </div>
                <div class="ui multiple selection search dropdown" id="trigger-details" style="width: 295px;">
                  <input type="hidden" name="tags" />
                  <i class="dropdown icon"></i>
                  <div class="default text">Select triggers or enter new value</div>
                  <div class="menu">
                    <% triggerValues.forEach(function(trigger) { %>
                      <div class="item" data-value="<%= trigger.description %>"><%= trigger.description %></div>
                    <% }); %>
                  </div>
                </div>
              </div>
            </div>
            <div class="uk-container">
              <div class="label-input-container">
                <div class="label-with-spacing">
                  <label for="snapshot_date">Date:</label>
                </div>
                <div>
                  <input class="uk-input" name="snapshot_date" type="datetime-local" style="width: 330px;" required/>
                </div>
              </div>
            </div>
            <div class="uk-container">
              <div class="label-input-container">
                <div class="label-with-spacing">
                  <label for="snapshot_date">Notes:</label>
                </div>
                <div>
                  <input class="uk-input" name="snapshot_notes" type="text" style="width: 330px;" value=""/>
                </div>
              </div>
            </div>
            <div class="uk-container">
              <div uk-form-custom>
                <button id="addButton" class="uk-button uk-button-primary uk-button-large" formaction="/new">Add</button>
              </div>
            </div>
          </p>
        </div>
      </div>
    </div>

    <script>
      // SLIDER
      function increaseValue(emotion) {
        var slider = document.getElementById(emotion);
        var output = document.getElementById("emo-" + emotion);
    
        if (slider.value < 10) {
          slider.value = parseInt(slider.value) + 1;
          output.innerHTML = slider.value;
          updateChart();
        }
      }
    
      function decreaseValue(emotion) {
        var slider = document.getElementById(emotion);
        var output = document.getElementById("emo-" + emotion);
    
        if (slider.value > 0) {
          slider.value = parseInt(slider.value) - 1;
          output.innerHTML = slider.value;
          updateChart();
        }
      }
    
      // Add event listeners for range sliders
      var sliders = document.querySelectorAll(".uk-range");
      sliders.forEach(function (slider) {
        slider.addEventListener("input", function () {
          var emotion = this.id;
          var output = document.getElementById("emo-" + emotion);
          output.innerHTML = this.value;
          updateChart();
        });
      });
    
      // Add event listeners for buttons
      var buttons = document.querySelectorAll(".uk-button-default");
      buttons.forEach(function (button) {
        button.addEventListener("mousedown", function () {
          var emotion = this.getAttribute("data-emotion");
          var slider = document.getElementById(emotion);
          var output = document.getElementById("emo-" + emotion);
    
          if (this.textContent === "+") {
            if (slider.value < 10) {
              slider.value = parseInt(slider.value) + 1;
              output.innerHTML = slider.value;
              updateChart();
            }
          } else if (this.textContent === "-") {
            if (slider.value > 0) {
              slider.value = parseInt(slider.value) - 1;
              output.innerHTML = slider.value;
              updateChart();
            }
          }
        });
      });
    
      // Function to update the chart
      function updateChart() {
        // Update chart data based on the current slider values
        var chartData = [];
        sliders.forEach(function (slider) {
          chartData.push(parseInt(slider.value));
        });
    
        chartId.data.datasets[0].data = chartData;
        chartId.update();
      }
    </script>
    <script>
      var chrt = document.getElementById("chartId").getContext("2d");
    
      // Get the initial values from the sliders
      var initialData = [];
      sliders.forEach(function (slider) {
        initialData.push(parseInt(slider.value));
      });
    
      var chartId = new Chart(chrt, {
        type: "radar",
        data: {
          labels: [
            "Anger",
            "Contempt",
            "Disgust",
            "Enjoyment",
            "Fear",
            "Sadness",
            "Surprise",
          ],
          datasets: [
            {
              label: "Emotion Snapshot",
              data: initialData, // Set initial data dynamically
              backgroundColor: ["#FFF17625"],
              pointBackgroundColor: [
                "yellow",
                "aqua",
                "pink",
                "lightgreen",
                "lightblue",
                "gold",
                "purple",
              ],
              borderColor: ["black"],
              borderWidth: 1,
              pointRadius: 6,
            },
          ],
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: false,
            },
          },
          scale: {
        ticks: {
          beginAtZero: true,
        },
        min: 0,
        max: 10,
      },
      elements: {
            line: {
              borderWidth: 3,
            },
          },
        },
      });
    </script>
    <script>
      console.log("Dropdown initialization script executed");
    
      // Initialize Semantic UI dropdown
      $('.ui.dropdown').dropdown({
        allowAdditions: true,
        maxSelections: 10,
        onChange: function(value, text, $selectedItem) {
          console.log("Dropdown value changed");
          updateSelectedValues();
        },
        onAdd: function(addedValue, addedText, $addedChoice) {
          console.log("Item added");
          updateSelectedValues();
        },
        onRemove: function(removedValue, removedText, $removedChoice) {
          console.log("Item removed");
          updateSelectedValues();
        },
      });
    
      function updateSelectedValues() {
        var selectedValues = $('.ui.dropdown').dropdown('get value');
        console.log("Selected Values:", selectedValues);
      }
    </script>
    <!--------------------->
    <!-- Update Snapshot -->
    <!--------------------->
    <script>
      function handleAddButtonClick() {
        console.log("Executing handleAddButtonClick()");
        // Display a confirmation dialog
        UIkit.modal.confirm(`Add new snapshot?`).then(function () {
          // User clicked "Ok", proceed with the API call
          performAdd();
        }, function () {
          // User clicked "Cancel", do nothing or add additional logic if needed
        });
      }
    
      // Function to perform the API call after confirmation
      function performAdd() {
        // Ensure that the username is defined
        if (!window.username) {
          console.error("Username is not defined.");
          return;
        }
        console.log("Adding new snapshot...");

        var snapshotuser = window.username;
        var anger = document.getElementById('anger').value;
        var contempt = document.getElementById('contempt').value;
        var disgust = document.getElementById('disgust').value;
        var enjoyment = document.getElementById('enjoyment').value;
        var fear = document.getElementById('fear').value;
        var sadness = document.getElementById('sadness').value;
        var surprise = document.getElementById('surprise').value;
        var triggerDetails = $('.ui.dropdown').dropdown('get value');
        var snapshotDate = document.getElementsByName('snapshot_date')[0].value;
        var snapshotNotes = document.getElementsByName('snapshot_notes')[0].value;

        var putData = {
          inp_anger: anger,
          inp_contempt: contempt,
          inp_disgust: disgust,
          inp_enjoyment: enjoyment,
          inp_fear: fear,
          inp_sadness: sadness,
          inp_surprise: surprise,
          inp_notes: snapshotNotes,
          inp_triggerlist: triggerDetails,
          inp_snapshotdate: snapshotDate,
          inp_user: snapshotuser,
        };
        console.log("putData:", putData);

        $.put('/new', putData, function (data) {
          console.log(data);
        });
      }
      
      document.getElementById('addButton').addEventListener('click', handleAddButtonClick);
    </script>
  </body>
</html>